// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToroTrader.Infra.Data.Context;

#nullable disable

namespace ToroTrader.Infra.Data.Migrations
{
    [DbContext(typeof(ToroTraderContext))]
    [Migration("20250406011932_CreateTableProduct")]
    partial class CreateTableProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToroTrader.Application.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BondAsset")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Index")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1a0a3a7-c6ba-4f0a-9cb0-0ef20797c641"),
                            BondAsset = "CDB",
                            CreatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Index = "IPCA",
                            IssuerName = "Banco Teste",
                            Stock = 100,
                            Tax = 5.0m,
                            UnitPrice = 1000m,
                            UpdatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("e2a7b8d2-2fa8-4214-9de3-ce2e593d2b3c"),
                            BondAsset = "LCI",
                            CreatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Index = "Pre",
                            IssuerName = "Banco Teste 2",
                            Stock = 20,
                            Tax = 12.0m,
                            UnitPrice = 2000m,
                            UpdatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("ToroTrader.Application.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)");

                    b.Property<DateTime>("LastAccess")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f97e565d-08af-4281-bc11-c0206eae06fa"),
                            AccountId = "00001",
                            Balance = 5000m,
                            ClientId = "12454",
                            CreatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            DocumentNumber = "01234567809",
                            LastAccess = new DateTime(1, 1, 1, 2, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Peter Investidor",
                            UpdatedDate = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
